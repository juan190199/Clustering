% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kMeans.R
\name{new_kMeans}
\alias{new_kMeans}
\title{kMeans algorithm}
\usage{
new_kMeans(
  data,
  k = 1,
  maxIterations = 100,
  setInitialCentroids = NULL,
  type = "kMeans"
)
}
\arguments{
\item{data}{A matrix, data.frame, tibble, with two numeric colums and at least two rows}

\item{k}{A number of how many clusters should be detected}

\item{maxIterations}{A number. kMeans converges fast set \code{maxIterations} to 10-100 is mostly ok}

\item{setInitialCentroids}{A matrix with x,y columns. Set start values ie points, if not than
the algorithm does that randomly}

\item{type}{A character string. What kind of algorithm here the standart kMeans and kMeans++ algorithm}
}
\value{
An object of class `kMeans` with components:
\item{data}{original data}
\item{clusterIds}{A numeric vector with the cluster assignments}
\item{clusteredData}{A matrix with the points and its assigned cluster}
\item{centroids}{A numeric vector with the center points of the clusters}
}
\description{
Use this algorithm to identify a given number of clusters.
}
\details{
kMeans clustering is a method of vector quantization, originally from signal
processing, that aims to partition n observations into k clusters in which
each observation belongs to the cluster with the nearest mean (cluster
centers or cluster centroid), serving as a prototype of the cluster.
}
\examples{
n <- 50
data <- cbind(wrw = c(runif(n, min=0, max=3), runif(n, min=5, max=6), runif(n, min=8, max=10)),
              yys = c(runif(n, min=0, max=3), runif(n, min=2, max=7), runif(n, min=6, max=10)))

km <- new_kMeans(data, 3, 20, type = "kMeans++")


#visualize
plot(km, titles = "ewgfsgw")
print(km)
}
